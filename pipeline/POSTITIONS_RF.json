{
	"name": "POSTITIONS_RF",
	"properties": {
		"activities": [
			{
				"name": "set_filename",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "filename",
					"value": {
						"value": "@concat(\n    utcNow(pipeline().parameters.filenameDatePattern),\n    '_',\n    pipeline().parameters.filename,\n    '.csv'\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_folderPathOut",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "folderPathOut",
					"value": {
						"value": "@concat(\n    pipeline().parameters.datasource,\n    '/',\n    pipeline().parameters.dataset,\n    '/in/',\n    utcNow('yyyyMMdd')\n    )",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_guid",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "guid",
					"value": {
						"value": "@guid()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_navDate",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "navDate",
					"value": {
						"value": "@if(\n    empty(pipeline().parameters.navDate),\n    adddays(utcnow('yyyy-MM-dd'), -1, 'yyyy-MM-dd'),\n    pipeline().parameters.navDate\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "feed_render_financialratio_position_and_portfolio",
				"type": "DatabricksSparkJar",
				"dependsOn": [
					{
						"activity": "raw_to_staging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"mainClassName": "com.carmignac.icare.elysee.project.render.PositionFinancialRatio",
					"parameters": [
						"@concat('/mnt/raw/',\n    variables('folderPathOut'), '/')",
						"@pipeline().parameters.datasource",
						"@pipeline().parameters.dataset",
						"@variables('guid')",
						"@variables('queriedDate')"
					],
					"libraries": [
						{
							"jar": "dbfs:/databricks/job-jars/IcareDataLib.jar"
						}
					]
				},
				"linkedServiceName": {
					"referenceName": "LS_DTBK_1_NODE_12_2_RUNTIME",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "oly_position_to_blob",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "set_list_of_funds",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_filename",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_folderPathOut",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_guid",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_navDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderQuery": {
							"value": "@CONCAT(\n   'SELECT Id_Day, PortfolioCode, SecurityIsin, SecurityName,  SUM(PortfolioAllocation) as PortfolioAllocation\n   FROM (\n   SELECT Id_Day, PortfolioCode, SecurityIsin, SecurityName,  PortfolioAllocation FROM [usr].[F_DS_Holdings_Stack] (''', variables('queriedDate'),''',''',variables('listOfFunds'),''' , ''D'', 0, ''ALL'', 0, ''DEFAULT'', 1, ''FUND'')\n   ) a \n   GROUP BY Id_Day, PortfolioCode, SecurityIsin, SecurityName ;'\n)",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Id_Day",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "Id_Day",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PortfolioCode",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "PortfolioCode",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "SecurityIsin",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SecurityIsin",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "SecurityName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SecurityName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PortfolioAllocation",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 10,
									"precision": 38
								},
								"sink": {
									"name": "PortfolioAllocation",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "OLYMPIA_Generic",
						"type": "DatasetReference",
						"parameters": {
							"tableName": "F_DS_Holdings_Stack",
							"schemaName": "usr"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ADLS_CSV_FILE",
						"type": "DatasetReference",
						"parameters": {
							"folderPath": {
								"value": "@variables('folderPathOut')",
								"type": "Expression"
							},
							"fileName": {
								"value": "@variables('filename')",
								"type": "Expression"
							},
							"containerName": "raw"
						}
					}
				]
			},
			{
				"name": "set_queriedDate",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "LookForQueriedDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "queriedDate",
					"value": {
						"value": "@if(\n    empty(pipeline().parameters.queriedDate),\n    string(activity('LookForQueriedDate').output.firstRow.qdate),\n    pipeline().parameters.queriedDate\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_list_of_funds",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "look_for_list_funds",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "listOfFunds",
					"value": {
						"value": "@activity('look_for_list_funds').output.firstRow.Cod_Ptf_Vom",
						"type": "Expression"
					}
				}
			},
			{
				"name": "LookForQueriedDate",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "@CONCAT(\n    'select TO_CHAR(\"Date\", ''YYYYMMDD'') as qdate from ds.\"Calendar\" \nwhere \"IsMonthLastOpenDay\" = 1\nAND \"Annee\" = ', adddays(startOfMonth(utcnow('yyyy-MM-dd')), -1, 'yyyy'),' \nAND \"Mois\" = ',adddays(startOfMonth(utcnow('yyyy-MM-dd')), -1, 'MM')\n)",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ELYSEE_RENDER",
						"type": "DatasetReference",
						"parameters": {
							"schemaName": "ds",
							"tableName": "Calendar"
						}
					}
				}
			},
			{
				"name": "look_for_list_funds",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderQuery": "SELECT STRING_AGG( ISNULL(code, ' '), ',') As Cod_Ptf_Vom\n  \nFROM (  \n  SELECT \n      [Is_Cur]\n      ,[Cod_Ptf_Vom] as code\n      ,[Lib_Ptf]\n  FROM [stg].[Td_Portfolio]\n    WHERE Is_Cur = 'Y'\n  AND (Lib_Mgt = 'Gestion Actions' OR (Lib_Mgt = 'Gestion Mixte' AND Is_LS = 'Y'))\n  AND Typ_Gestion <> 'PRF'\n  AND Leg_Sta <> 'OEIC' ) a",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "OLYMPIA_Generic",
						"type": "DatasetReference",
						"parameters": {
							"tableName": "stg",
							"schemaName": "Td_Portfolio"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "raw_to_staging",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "if_enough_data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "RAW_TO_DELTA",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"filePath": {
							"value": "@concat(\n    '/mnt/raw/',\n    variables('folderPathOut'),\n    '/',\n    variables('filename')\n)",
							"type": "Expression"
						},
						"dataSource": {
							"value": "@pipeline().parameters.datasource",
							"type": "Expression"
						},
						"dataSet": {
							"value": "@pipeline().parameters.dataset",
							"type": "Expression"
						},
						"guid": {
							"value": "@variables('guid')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "look_for_previous_success",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set_queriedDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "SELECT success FROM tech.positionfinancialratio_processed\nwhere ref_date = '@{variables('queriedDate')}';\n",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "POSTGRE_ELY_BUSINESS",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "look_for_previous_success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(equals(activity('look_for_previous_success').output?.firstRow?.success, 'true'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail1",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "pipeline already executed successfully ",
								"errorCode": "2"
							}
						}
					]
				}
			},
			{
				"name": "metadata_of_previous_month_query_result",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "oly_position_to_blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ADLS_CSV_FILE",
						"type": "DatasetReference",
						"parameters": {
							"folderPath": "@variables('folderPathOut')",
							"fileName": "@variables('filename')",
							"containerName": "raw"
						}
					},
					"fieldList": [
						"size"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "if_enough_data",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "metadata_of_previous_month_query_result",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('metadata_of_previous_month_query_result').output.size, 150)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail2",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "data for position not yet ready",
								"errorCode": "2"
							}
						}
					]
				}
			},
			{
				"name": "Delete_empty_file",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "if_enough_data",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ADLS_CSV_FILE",
						"type": "DatasetReference",
						"parameters": {
							"folderPath": "@variables('folderPathOut')",
							"fileName": "@variables('filename')",
							"containerName": "raw"
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "no_data_failure",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Delete_empty_file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "no data. fail, do repeat",
					"errorCode": "2"
				}
			}
		],
		"parameters": {
			"filename": {
				"type": "string",
				"defaultValue": "f_ds_holdings_stack_fr"
			},
			"filenameDatePattern": {
				"type": "string",
				"defaultValue": "yyyyMMdd_HHmmss"
			},
			"datasource": {
				"type": "string",
				"defaultValue": "olympia"
			},
			"dataset": {
				"type": "string",
				"defaultValue": "f_ds_holdings_stack_fr"
			},
			"navDate": {
				"type": "string"
			},
			"queriedDate": {
				"type": "string"
			}
		},
		"variables": {
			"navDate": {
				"type": "String"
			},
			"folderPathOut": {
				"type": "String"
			},
			"folderPathWip": {
				"type": "String"
			},
			"guid": {
				"type": "String"
			},
			"queryOutputPath": {
				"type": "String"
			},
			"queryOutputFolderName": {
				"type": "String"
			},
			"queriedDate": {
				"type": "String"
			},
			"varTest": {
				"type": "Array"
			},
			"listOfFunds": {
				"type": "String"
			},
			"filename": {
				"type": "String"
			}
		},
		"folder": {
			"name": "ISSUER"
		},
		"annotations": []
	}
}