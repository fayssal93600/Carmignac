{
	"name": "FACTSET_API_RF",
	"properties": {
		"activities": [
			{
				"name": "set_filename",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "filename",
					"value": {
						"value": "@concat(\n    utcNow(pipeline().parameters.filenameDatePattern),\n    '_',\n    pipeline().parameters.filename,\n    '.csv'\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_folderPathOut",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "folderPathOut",
					"value": {
						"value": "@concat(\n    pipeline().parameters.datasource,\n    '/',\n    pipeline().parameters.dataset,\n    '/in/',\n    utcNow('yyyyMMdd')\n    )",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_folderPathWip",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "folderPathWip",
					"value": {
						"value": "@concat(\n    pipeline().parameters.datasource,\n    '/',\n    pipeline().parameters.dataset\n    )",
						"type": "Expression"
					}
				}
			},
			{
				"name": "raw_to_staging",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "call_factset_api_batch",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "RAW_TO_DELTA",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"filePath": {
							"value": "@concat(\n    '/mnt/raw/',\n    variables('folderPathOut'),\n    '/',\n    variables('filename')\n)",
							"type": "Expression"
						},
						"dataSource": {
							"value": "@pipeline().parameters.datasource",
							"type": "Expression"
						},
						"dataSet": {
							"value": "@pipeline().parameters.dataset",
							"type": "Expression"
						},
						"guid": {
							"value": "@variables('guid')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "set_guid",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "guid",
					"value": {
						"value": "@guid()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "feed_thirdparty_fiancial_ratio_metric_table",
				"type": "DatabricksSparkJar",
				"dependsOn": [
					{
						"activity": "raw_to_staging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"mainClassName": "com.carmignac.icare.elysee.project.business.issuer.ThirdPartyFinancialRatio",
					"parameters": [
						"@concat(variables('folderPathOut'),'/',variables('filename'))",
						"@pipeline().parameters.datasource",
						"@pipeline().parameters.dataset",
						"@variables('guid')"
					],
					"libraries": [
						{
							"jar": "dbfs:/databricks/job-jars/IcareDataLib.jar"
						}
					]
				},
				"linkedServiceName": {
					"referenceName": "LS_DTBK_1_NODE_12_2_RUNTIME",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "feed_markets_fiancial_ratio_metric_table_copy1",
				"type": "DatabricksSparkJar",
				"dependsOn": [
					{
						"activity": "raw_to_staging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"mainClassName": "com.carmignac.icare.elysee.project.business.issuer.InstrumentFinancialRatio",
					"parameters": [
						"@concat(variables('folderPathOut'),'/',variables('filename'))",
						"@pipeline().parameters.datasource",
						"@pipeline().parameters.dataset",
						"@variables('guid')"
					],
					"libraries": [
						{
							"jar": "dbfs:/databricks/job-jars/IcareDataLib.jar"
						}
					]
				},
				"linkedServiceName": {
					"referenceName": "LS_DTBK_1_NODE_12_2_RUNTIME",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "render_financial_ratio_metric_table",
				"type": "DatabricksSparkJar",
				"dependsOn": [
					{
						"activity": "feed_thirdparty_fiancial_ratio_metric_table",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "feed_markets_fiancial_ratio_metric_table_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"mainClassName": "com.carmignac.icare.elysee.project.render.FinancialRatioBusinessToRender",
					"parameters": [
						"@concat(variables('folderPathOut'),'/',variables('filename'))",
						"@pipeline().parameters.datasource",
						"@pipeline().parameters.dataset",
						"@variables('guid')"
					],
					"libraries": [
						{
							"jar": "dbfs:/databricks/job-jars/IcareDataLib.jar"
						}
					]
				},
				"linkedServiceName": {
					"referenceName": "LS_DTBK_1_NODE_12_2_RUNTIME",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "set_navDate",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "navDate",
					"value": {
						"value": "@if(\n    empty(pipeline().parameters.navDate),\n    adddays(utcnow('yyyy-MM-dd'), -1, 'yyyy-MM-dd'),\n    pipeline().parameters.navDate\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "call_factset_api_batch",
				"type": "DatabricksSparkJar",
				"dependsOn": [
					{
						"activity": "set_guid",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_folderPathOut",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_filename",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_navDate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "vom_isins_to_blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"mainClassName": "com.carmignac.icare.elysee.project.datarequest.FactsetApi",
					"parameters": [
						"@concat('/mnt/raw/',\n    variables('folderPathOut'), '/')",
						"@variables('guid')",
						"@variables('navDate')",
						"@variables('filename')",
						"@concat('/wip/',\n    variables('folderPathWip'),\n    '/',\n    variables('filenameisinsjson')\n)"
					],
					"libraries": [
						{
							"jar": "dbfs:/databricks/job-jars/IcareDataLib.jar"
						}
					]
				},
				"linkedServiceName": {
					"referenceName": "LS_DTBK_1_NODE_12_2_RUNTIME",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "vom_isins_to_blob",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "set_folderPathWip",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_filename_isins_json",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select \n\t'\"' +COALESCE(STUFF(\n\t\t( SELECT ',' + CONVERT(NVARCHAR(max),isin)\n\t\t\tFROM (SELECT distinct sec.Isin as isin\n\t\t\t\tFROM [p_data].[TR_Equity] eq\n\t\t\t\tJOIN [p_data].[TR_Security] sec on eq.SecId = sec.SecId and eq.Dat = sec.Dat \n\t\t\t\tWHERE eq.Dat >= DATEADD(DAY, -8, GETDATE()) AND len(sec.Isin) = 12\n\t\t\t) tbl\n\t\t\tFOR XML PATH('')\n\t\t), 1, 2, N''\n\t), N'') +'\"' AS distinctIsins",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "distinctIsins"
								},
								"sink": {
									"path": "$['distinctIsins']"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "VENDOME_Generic",
						"type": "DatasetReference",
						"parameters": {
							"tableName": "TR_Equity",
							"schemaName": "p_data"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ADLS_JSON_FILE",
						"type": "DatasetReference",
						"parameters": {
							"folderPath": {
								"value": "@variables('folderPathWip')",
								"type": "Expression"
							},
							"fileName": {
								"value": "@variables('filenameisinsjson')",
								"type": "Expression"
							},
							"containerName": "wip"
						}
					}
				]
			},
			{
				"name": "set_filename_isins_json",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "filenameisinsjson",
					"value": {
						"value": "@concat(\n    utcNow(pipeline().parameters.filenameDatePattern),\n    '_',\n    'isinsfromvom.json')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"filename": {
				"type": "string",
				"defaultValue": "cross_sectional"
			},
			"filenameDatePattern": {
				"type": "string",
				"defaultValue": "yyyyMMdd_HHmmss"
			},
			"datasource": {
				"type": "string",
				"defaultValue": "factset"
			},
			"dataset": {
				"type": "string",
				"defaultValue": "crossSectional"
			},
			"navDate": {
				"type": "string"
			}
		},
		"variables": {
			"isin": {
				"type": "String"
			},
			"filename": {
				"type": "String"
			},
			"navDate": {
				"type": "String"
			},
			"folderPathOut": {
				"type": "String"
			},
			"folderPathWip": {
				"type": "String"
			},
			"guid": {
				"type": "String"
			},
			"filenameisinsjson": {
				"type": "String"
			}
		},
		"folder": {
			"name": "ISSUER"
		},
		"annotations": []
	}
}